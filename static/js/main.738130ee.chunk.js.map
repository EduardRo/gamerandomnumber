{"version":3,"sources":["util/index.js","components/Form.js","components/Progress.js","App.js","index.js"],"names":["generateRandomNumber","Math","floor","random","Form","returnGuessToApp","style","marginTop","onSubmit","e","preventDefault","guess","target","elements","value","TextField","paddingBottom","fullWidth","type","name","label","required","Button","variant","color","Progress","attempt","guessList","Typography","className","App","state","allGuess","updateAppState","console","log","absDiff","abs","setState","prevState","this","map","item","index","key","Grid","container","height","justify","alignitem","xs","Paper","margin","elevation","align","gutterBottom","Divider","padding","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAAaA,EAAuB,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,G,gBCmB7DC,EAhBF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAOZ,OACI,0BAAMC,MAAO,CAAEC,UAAW,QAAUC,SANvB,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,MACtCT,EAAiBM,KAIb,kBAACI,EAAA,EAAD,CAAWT,MAAO,CAAEU,cAAe,QAAUC,WAAS,EAACC,KAAK,SAASC,KAAK,QAAQC,MAAM,sBAAsBC,UAAQ,IACtH,kBAACC,EAAA,EAAD,CAAQL,WAAS,EAACM,QAAQ,YAAYC,MAAM,UAAUN,KAAK,UAA3D,WCAGO,G,MATE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACb,6BACI,kBAACC,EAAA,EAAD,CAAYL,QAAQ,KAAKjB,MAAO,CAAEC,UAAW,SAA7C,kBAAuEmB,GACvE,wBAAIG,UAAU,wBACTF,MC6CEG,E,2MA9CbC,MAAQ,CACN/B,qBAAsBA,EACtBW,MAAO,IACPqB,SAAU,GACVN,QAAS,G,EAEXO,eAAiB,SAACtB,GAEhBuB,QAAQC,IAAIxB,GAEZ,IAAMyB,EAAUnC,KAAKoC,IAAI1B,EAAQ,EAAKoB,MAAM/B,sBAE5C,EAAKsC,SAAS,SAAAC,GAAS,MAAK,CAC1B5B,MAAO,KACPqB,SAAS,GAAD,mBAAMO,EAAUP,UAAhB,CAA0B,CAAErB,WACpCe,QAASa,EAAUb,QAAU,KAE/BQ,QAAQC,IAAIC,I,wEAEJ,IAAD,SACuBI,KAAKT,MAAjBL,GADX,EACCM,SADD,EACWN,SACZC,EAAYa,KAAKT,MAAMC,SAASS,IAAI,SAACC,EAAMC,GAAP,OACxC,wBAAIC,IAAKD,GACP,8BAAOD,EAAK/B,UAIhB,OAEE,kBAAEkC,EAAA,EAAF,CAAOC,WAAS,EAACxC,MAAO,CAAEyC,OAAQ,SAChCC,QAAQ,SAASC,UAAU,UAC3B,kBAACJ,EAAA,EAAD,CAAMH,MAAI,EAACQ,GAAI,GACb,kBAACC,EAAA,EAAD,CAAO7C,MAAO,CAAE8C,OAAQ,SAAWC,UAAW,IAC9C,kBAACzB,EAAA,EAAD,CAAY0B,MAAM,SAAS/B,QAAQ,KAAKgC,cAAY,GAApD,eACA,kBAACC,EAAA,EAAD,CAASlD,MAAO,CAAE8C,OAAQ,YAE1B,kBAAC,EAAD,CAAM/C,iBAAkB,SAAAM,GAAK,OAAI,EAAKsB,eAAetB,IAAQL,MAAO,CAAEmD,QAAS,OAASJ,UAAW,IACnG,kBAAC,EAAD,CAAU3B,QAASA,EAASC,UAAWA,U,GAtC/B+B,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.738130ee.chunk.js","sourcesContent":["export const generateRandomNumber = () => Math.floor(Math.random() * 100) + 1;\r\n","import React from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nconst Form = ({ returnGuessToApp }) => {\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const guess = e.target.elements.guess.value;\r\n        returnGuessToApp(guess);\r\n    }\r\n    return (\r\n        <form style={{ marginTop: '20px' }} onSubmit={onSubmit}>\r\n            <TextField style={{ paddingBottom: '20px' }} fullWidth type=\"number\" name=\"guess\" label=\"Enter your guess...\" required />\r\n            <Button fullWidth variant=\"contained\" color=\"primary\" type='submit'>Guess</Button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport './Progress.css';\r\n\r\nconst Progress = ({ attempt, guessList }) => (\r\n    <div>\r\n        <Typography variant=\"h4\" style={{ marginTop: '50px' }}>Guess attempt: {attempt}</Typography>\r\n        <ul className=\"progressBar__history\">\r\n            {guessList}\r\n        </ul>\r\n    </div >\r\n);\r\n\r\nexport default Progress;","import React from 'react';\nimport { Grid, Typography, Paper, Divider } from '@material-ui/core';\nimport { generateRandomNumber } from './util';\nimport Form from './components/Form';\nimport Progress from './components/Progress';\n\nclass App extends React.Component {\n  state = {\n    generateRandomNumber: generateRandomNumber,\n    guess: 999,\n    allGuess: [],\n    attempt: 0,\n  }\n  updateAppState = (guess) => {\n\n    console.log(guess);\n    //console.log(prevState.guess);\n    const absDiff = Math.abs(guess - this.state.generateRandomNumber);\n\n    this.setState(prevState => ({\n      guess: 1111,\n      allGuess: [...prevState.allGuess, { guess }],\n      attempt: prevState.attempt + 1\n    }))\n    console.log(absDiff);\n  }\n  render() {\n    const { allGuess, attempt } = this.state;\n    const guessList = this.state.allGuess.map((item, index) => (\n      <li key={index}>\n        <span>{item.guess}</span>\n      </li>\n    ));\n\n    return (\n\n      < Grid container style={{ height: '100vh' }\n      } justify=\"center\" alignitem=\"center\" >\n        <Grid item xs={6} >\n          <Paper style={{ margin: '150px' }} elevation={6} ></Paper>\n          <Typography align=\"center\" variant=\"h2\" gutterBottom>Hot or Cold</Typography>\n          <Divider style={{ margin: '1px, 0' }} />\n\n          <Form returnGuessToApp={guess => this.updateAppState(guess)} style={{ padding: '5px' }} elevation={6} />\n          <Progress attempt={attempt} guessList={guessList} />\n\n        </Grid>\n\n      </Grid>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}